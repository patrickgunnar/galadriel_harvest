use lazy_static::lazy_static;
use std::collections::HashMap;

// dynamic CSS properties
lazy_static! {
    pub static ref DYNAMIC_CORE: HashMap<String, String> = {
        let mut map: HashMap<String, String> = HashMap::new();

        // set CSS properties
        map.insert("aspectRatio".to_string(), "aspect-ratio".to_string());
        map.insert("accentColor".to_string(), "accent-color".to_string());
        map.insert("backdropFilter".to_string(), "backdrop-filter".to_string());
        map.insert("content".to_string(), "content".to_string());
        map.insert("gap".to_string(), "gap".to_string());
        map.insert("rowGap".to_string(), "row-gap".to_string());
        map.insert("scale".to_string(), "scale".to_string());
        map.insert("order".to_string(), "order".to_string());
        map.insert("pointerEvents".to_string(), "pointer-events".to_string());
        map.insert("margin".to_string(), "margin".to_string());
        map.insert("marginBottom".to_string(), "margin-bottom".to_string());
        map.insert("marginLeft".to_string(), "margin-left".to_string());
        map.insert("marginRight".to_string(), "margin-right".to_string());
        map.insert("marginTop".to_string(), "margin-top".to_string());
        map.insert("padding".to_string(), "padding".to_string());
        map.insert("paddingBottom".to_string(), "padding-bottom".to_string());
        map.insert("paddingLeft".to_string(), "padding-left".to_string());
        map.insert("paddingRight".to_string(), "padding-right".to_string());
        map.insert("paddingTop".to_string(), "padding-top".to_string());
        map.insert("height".to_string(), "height".to_string());
        map.insert("width".to_string(), "width".to_string());
        map.insert("filter".to_string(), "filter".to_string());
        map.insert("maxHeight".to_string(), "max-height".to_string());
        map.insert("maxWidth".to_string(), "max-width".to_string());
        map.insert("minHeight".to_string(), "min-height".to_string());
        map.insert("minWidth".to_string(), "min-width".to_string());
        map.insert("border".to_string(), "border".to_string());
        map.insert("borderBottom".to_string(), "border-bottom".to_string());
        map.insert("borderBottomColor".to_string(), "border-bottom-color".to_string());
        map.insert("borderBottomStyle".to_string(), "border-bottom-style".to_string());
        map.insert("borderBottomWidth".to_string(), "border-bottom-width".to_string());
        map.insert("borderColor".to_string(), "border-color".to_string());
        map.insert("borderLeft".to_string(), "border-left".to_string());
        map.insert("borderLeftColor".to_string(), "border-left-color".to_string());
        map.insert("borderLeftStyle".to_string(), "border-left-style".to_string());
        map.insert("borderLeftWidth".to_string(), "border-left-width".to_string());
        map.insert("borderRight".to_string(), "border-right".to_string());
        map.insert("borderRightColor".to_string(), "border-right-color".to_string());
        map.insert("borderRightStyles".to_string(), "border-right-style".to_string());
        map.insert("borderRightWidth".to_string(), "border-right-width".to_string());
        map.insert("borderStyle".to_string(), "border-style".to_string());
        map.insert("borderTop".to_string(), "border-top".to_string());
        map.insert("borderTopColor".to_string(), "border-top-color".to_string());
        map.insert("borderTopStyle".to_string(), "border-top-style".to_string());
        map.insert("borderTopWidth".to_string(), "border-top-width".to_string());
        map.insert("borderWidth".to_string(), "border-width".to_string());
        map.insert("outline".to_string(), "outline".to_string());
        map.insert("outlineColor".to_string(), "outline-color".to_string());
        map.insert("outlineStyle".to_string(), "outline-style".to_string());
        map.insert("outlineWidth".to_string(), "outline-width".to_string());
        map.insert("borderBottomLeftRadius".to_string(), "border-bottom-left-radius".to_string());
        map.insert("borderBottomRightRadius".to_string(), "border-bottom-right-radius".to_string());
        map.insert("borderImage".to_string(), "border-image".to_string());
        map.insert("borderImageOutset".to_string(), "border-image-outset".to_string());
        map.insert("borderImageRepeat".to_string(), "border-image-repeat".to_string());
        map.insert("borderImageSlice".to_string(), "border-image-slice".to_string());
        map.insert("borderImageSource".to_string(), "border-image-source".to_string());
        map.insert("borderImageWidth".to_string(), "border-image-width".to_string());
        map.insert("borderRadius".to_string(), "border-radius".to_string());
        map.insert("borderTopLeftRadius".to_string(), "border-top-left-radius".to_string());
        map.insert("borderTopRightRadius".to_string(), "border-top-right-radius".to_string());
        map.insert("boxDecorationBreak".to_string(), "box-decoration-break".to_string());
        map.insert("boxShadow".to_string(), "box-shadow".to_string());
        map.insert("background".to_string(), "background".to_string());
        map.insert("backgroundAttachment".to_string(), "background-attachment".to_string());
        map.insert("backgroundColor".to_string(), "background-color".to_string());
        map.insert("backgroundImage".to_string(), "background-image".to_string());
        map.insert("backgroundPosition".to_string(), "background-position".to_string());
        map.insert("backgroundPositionX".to_string(), "background-position-x".to_string());
        map.insert("backgroundPositionY".to_string(), "background-position-y".to_string());
        map.insert("backgroundRepeat".to_string(), "background-repeat".to_string());
        map.insert("backgroundClip".to_string(), "background-clip".to_string());
        map.insert("backgroundOrigin".to_string(), "background-origin".to_string());
        map.insert("backgroundSize".to_string(), "background-size".to_string());
        map.insert("backgroundBlendMode".to_string(), "background-blend-mode".to_string());
        map.insert("colorProfile".to_string(), "color-profile".to_string());
        map.insert("opacity".to_string(), "opacity".to_string());
        map.insert("renderingIntent".to_string(), "rendering-intent".to_string());
        map.insert("font".to_string(), "font".to_string());
        map.insert("fontFamily".to_string(), "font-family".to_string());
        map.insert("fontSize".to_string(), "font-size".to_string());
        map.insert("fontStyle".to_string(), "font-style".to_string());
        map.insert("fontVariant".to_string(), "font-variant".to_string());
        map.insert("fontWeight".to_string(), "font-weight".to_string());
        map.insert("fontSizeAdjust".to_string(), "font-size-adjust".to_string());
        map.insert("fontStretch".to_string(), "font-stretch".to_string());
        map.insert("Positioning".to_string(), "Positioning".to_string());
        map.insert("bottom".to_string(), "bottom".to_string());
        map.insert("clear".to_string(), "clear".to_string());
        map.insert("clipPath".to_string(), "clip-path".to_string());
        map.insert("cursor".to_string(), "cursor".to_string());
        map.insert("display".to_string(), "display".to_string());
        map.insert("float".to_string(), "float".to_string());
        map.insert("left".to_string(), "left".to_string());
        map.insert("overflow".to_string(), "overflow".to_string());
        map.insert("position".to_string(), "position".to_string());
        map.insert("right".to_string(), "right".to_string());
        map.insert("top".to_string(), "top".to_string());
        map.insert("visibility".to_string(), "visibility".to_string());
        map.insert("zIndex".to_string(), "z-index".to_string());
        map.insert("target".to_string(), "target".to_string());
        map.insert("targetName".to_string(), "target-name".to_string());
        map.insert("targetNew".to_string(), "target-new".to_string());
        map.insert("targetPosition".to_string(), "target-position".to_string());
        map.insert("color".to_string(), "color".to_string());
        map.insert("direction".to_string(), "direction".to_string());
        map.insert("letterSpacing".to_string(), "letter-spacing".to_string());
        map.insert("lineHeight".to_string(), "line-height".to_string());
        map.insert("lineBreak".to_string(), "line-break".to_string());
        map.insert("textAlign".to_string(), "text-align".to_string());
        map.insert("textDecoration".to_string(), "text-decoration".to_string());
        map.insert("textIndent".to_string(), "text-indent".to_string());
        map.insert("textTransform".to_string(), "text-transform".to_string());
        map.insert("unicodeBidi".to_string(), "unicode-bidi".to_string());
        map.insert("verticalAlign".to_string(), "vertical-align".to_string());
        map.insert("whiteSpace".to_string(), "white-space".to_string());
        map.insert("wordSpacing".to_string(), "word-spacing".to_string());
        map.insert("textOutline".to_string(), "text-outline".to_string());
        map.insert("textOverflow".to_string(), "text-overflow".to_string());
        map.insert("textShadow".to_string(), "text-shadow".to_string());
        map.insert("textWrap".to_string(), "text-wrap".to_string());
        map.insert("wordBreak".to_string(), "word-break".to_string());
        map.insert("wordWrap".to_string(), "word-wrap".to_string());
        map.insert("listStyle".to_string(), "list-style".to_string());
        map.insert("listStyleImage".to_string(), "list-style-image".to_string());
        map.insert("listStylePosition".to_string(), "list-style-position".to_string());
        map.insert("listStyleType".to_string(), "list-style-type".to_string());
        map.insert("borderCollapse".to_string(), "border-collapse".to_string());
        map.insert("borderSpacing".to_string(), "border-spacing".to_string());
        map.insert("captionSide".to_string(), "caption-side".to_string());
        map.insert("emptyCells".to_string(), "empty-cells".to_string());
        map.insert("tableLayout".to_string(), "table-layout".to_string());
        map.insert("marqueeDirection".to_string(), "marquee-direction".to_string());
        map.insert("marqueePlayCount".to_string(), "marquee-play-count".to_string());
        map.insert("marqueeSpeed".to_string(), "marquee-speed".to_string());
        map.insert("marqueeStyle".to_string(), "marquee-style".to_string());
        map.insert("overflowX".to_string(), "overflow-x".to_string());
        map.insert("overflowY".to_string(), "overflow-y".to_string());
        map.insert("overflowStyle".to_string(), "overflow-style".to_string());
        map.insert("rotation".to_string(), "rotation".to_string());
        map.insert("boxAlign".to_string(), "box-align".to_string());
        map.insert("boxDirection".to_string(), "box-direction".to_string());
        map.insert("boxFlex".to_string(), "box-flex".to_string());
        map.insert("boxFlexGroup".to_string(), "box-flex-group".to_string());
        map.insert("boxLines".to_string(), "box-lines".to_string());
        map.insert("boxOrdinalGroup".to_string(), "box-ordinal-group".to_string());
        map.insert("boxOrient".to_string(), "box-orient".to_string());
        map.insert("boxPack".to_string(), "box-pack".to_string());
        map.insert("alignmentAdjust".to_string(), "alignment-adjust".to_string());
        map.insert("alignmentBaseline".to_string(), "alignment-baseline".to_string());
        map.insert("baselineShift".to_string(), "baseline-shift".to_string());
        map.insert("dominantBaseline".to_string(), "dominant-baseline".to_string());
        map.insert("dropInitialAfterAdjust".to_string(), "drop-initial-after-adjust".to_string());
        map.insert("dropInitialAfterAlign".to_string(), "drop-initial-after-align".to_string());
        map.insert("dropInitialBeforeAdjust".to_string(), "drop-initial-before-adjust".to_string());
        map.insert("dropInitialBeforeAlign".to_string(), "drop-initial-before-align".to_string());
        map.insert("dropInitialSize".to_string(), "drop-initial-size".to_string());
        map.insert("dropInitialValue".to_string(), "drop-initial-value".to_string());
        map.insert("inlineBoxAlign".to_string(), "inline-box-align".to_string());
        map.insert("lineStacking".to_string(), "line-stacking".to_string());
        map.insert("lineStackingRuby".to_string(), "line-stacking-ruby".to_string());
        map.insert("lineStackingShift".to_string(), "line-stacking-shift".to_string());
        map.insert("lineStackingStrategy".to_string(), "line-stacking-strategy".to_string());
        map.insert("textHeight".to_string(), "text-height".to_string());
        map.insert("columnCount".to_string(), "column-count".to_string());
        map.insert("columnFill".to_string(), "column-fill".to_string());
        map.insert("columnGap".to_string(), "column-gap".to_string());
        map.insert("columnRule".to_string(), "column-rule".to_string());
        map.insert("columnRuleColor".to_string(), "column-rule-color".to_string());
        map.insert("columnRuleStyle".to_string(), "column-rule-style".to_string());
        map.insert("columnRuleWidth".to_string(), "column-rule-width".to_string());
        map.insert("columnSpan".to_string(), "column-span".to_string());
        map.insert("columnWidth".to_string(), "column-width".to_string());
        map.insert("columns".to_string(), "columns".to_string());
        map.insert("animation".to_string(), "animation".to_string());
        map.insert("animationName".to_string(), "animation-name".to_string());
        map.insert("animationDuration".to_string(), "animation-duration".to_string());
        map.insert("animationTimingFunction".to_string(), "animation-timing-function".to_string());
        map.insert("animationDelay".to_string(), "animation-delay".to_string());
        map.insert("animationFillMode".to_string(), "animation-fill-mode".to_string());
        map.insert("animationIterationCount".to_string(), "animation-iteration-count".to_string());
        map.insert("animationDirection".to_string(), "animation-direction".to_string());
        map.insert("animationPlayState".to_string(), "animation-play-state".to_string());
        map.insert("transform".to_string(), "transform".to_string());
        map.insert("transformOrigin".to_string(), "transform-origin".to_string());
        map.insert("transformStyle".to_string(), "transform-style".to_string());
        map.insert("perspective".to_string(), "perspective".to_string());
        map.insert("perspectiveOrigin".to_string(), "perspective-origin".to_string());
        map.insert("backfaceVisibility".to_string(), "backface-visibility".to_string());
        map.insert("transition".to_string(), "transition".to_string());
        map.insert("transitionProperty".to_string(), "transition-property".to_string());
        map.insert("transitionDuration".to_string(), "transition-duration".to_string());
        map.insert("transitionTimingFunction".to_string(), "transition-timing-function".to_string());
        map.insert("transitionDelay".to_string(), "transition-delay".to_string());
        map.insert("orphans".to_string(), "orphans".to_string());
        map.insert("pageBreakAfter".to_string(), "page-break-after".to_string());
        map.insert("pageBreakBefore".to_string(), "page-break-before".to_string());
        map.insert("pageBreakInside".to_string(), "page-break-inside".to_string());
        map.insert("widows".to_string(), "widows".to_string());
        map.insert("mark".to_string(), "mark".to_string());
        map.insert("markAfter".to_string(), "mark-after".to_string());
        map.insert("markBefore".to_string(), "mark-before".to_string());
        map.insert("phonemes".to_string(), "phonemes".to_string());
        map.insert("rest".to_string(), "rest".to_string());
        map.insert("restAfter".to_string(), "rest-after".to_string());
        map.insert("restBefore".to_string(), "rest-before".to_string());
        map.insert("voiceBalance".to_string(), "voice-balance".to_string());
        map.insert("voiceDuration".to_string(), "voice-duration".to_string());
        map.insert("voicePitch".to_string(), "voice-pitch".to_string());
        map.insert("voicePitchRange".to_string(), "voice-pitch-range".to_string());
        map.insert("voiceRate".to_string(), "voice-rate".to_string());
        map.insert("voiceStress".to_string(), "voice-stress".to_string());
        map.insert("voiceVolume".to_string(), "voice-volume".to_string());
        map.insert("appearance".to_string(), "appearance".to_string());
        map.insert("boxSizing".to_string(), "box-sizing".to_string());
        map.insert("icon".to_string(), "icon".to_string());
        map.insert("navDown".to_string(), "nav-down".to_string());
        map.insert("navIndex".to_string(), "nav-index".to_string());
        map.insert("navLeft".to_string(), "nav-left".to_string());
        map.insert("navRight".to_string(), "nav-right".to_string());
        map.insert("navUp".to_string(), "nav-up".to_string());
        map.insert("outlineOffset".to_string(), "outline-offset".to_string());
        map.insert("resize".to_string(), "resize".to_string());
        map.insert("quotes".to_string(), "quotes".to_string());
        map.insert("rotate".to_string(), "rotate".to_string());
        map.insert("translate".to_string(), "translate".to_string());
        map.insert("userSelect".to_string(), "user-select".to_string());
        map.insert("writingMode".to_string(), "writing-mode".to_string());
        map.insert("objectPosition".to_string(), "object-position".to_string());
        map.insert("objectFit".to_string(), "object-fit".to_string());
        map.insert("justifySelf".to_string(), "justify-self".to_string());
        map.insert("justifyContent".to_string(), "justify-content".to_string());
        map.insert("justifyItems".to_string(), "justify-items".to_string());
        map.insert("grid".to_string(), "grid".to_string());
        map.insert("gridArea".to_string(), "grid-area".to_string());
        map.insert("gridAutoColumns".to_string(), "grid-auto-columns".to_string());
        map.insert("gridAutoFlow".to_string(), "grid-auto-flow".to_string());
        map.insert("gridAutoRows".to_string(), "grid-auto-rows".to_string());
        map.insert("gridColumn".to_string(), "grid-column".to_string());
        map.insert("gridColumnEnd".to_string(), "grid-column-end".to_string());
        map.insert("gridColumnStart".to_string(), "grid-column-start".to_string());
        map.insert("gridRow".to_string(), "grid-row".to_string());
        map.insert("gridRowEnd".to_string(), "grid-row-end".to_string());
        map.insert("gridRowStart".to_string(), "grid-row-start".to_string());
        map.insert("gridTemplate".to_string(), "grid-template".to_string());
        map.insert("gridTemplateAreas".to_string(), "grid-template-areas".to_string());
        map.insert("gridTemplateColumns".to_string(), "grid-template-columns".to_string());
        map.insert("gridTemplateRows".to_string(), "grid-template-rows".to_string());
        map.insert("scrollbarColor".to_string(), "scrollbar-color".to_string());
        map.insert("scrollbarWidth".to_string(), "scrollbar-width".to_string());
        map.insert("scrollbarGutter".to_string(), "scrollbar-gutter".to_string());
        map.insert("hover".to_string(), ":hover".to_string());
        map.insert("active".to_string(), ":active".to_string());
        map.insert("focus".to_string(), ":focus".to_string());
        map.insert("firstChild".to_string(), ":first-child".to_string());
        map.insert("lastChild".to_string(), ":last-child".to_string());
        map.insert("firstOfType".to_string(), ":first-of-type".to_string());
        map.insert("lastOfType".to_string(), ":last-of-type".to_string());
        map.insert("onlyChild".to_string(), ":only-child".to_string());
        map.insert("onlyOfType".to_string(), ":only-of-type".to_string());
        map.insert("targetPseudoClass".to_string(), ":target".to_string());
        map.insert("visited".to_string(), ":visited".to_string());
        map.insert("checked".to_string(), ":checked".to_string());
        map.insert("disabled".to_string(), ":disabled".to_string());
        map.insert("enabled".to_string(), ":enabled".to_string());
        map.insert("readOnly".to_string(), ":read-only".to_string());
        map.insert("readWrite".to_string(), ":read-write".to_string());
        map.insert("placeholderShown".to_string(), ":placeholder-shown".to_string());
        map.insert("valid".to_string(), ":valid".to_string());
        map.insert("invalid".to_string(), ":invalid".to_string());
        map.insert("required".to_string(), ":required".to_string());
        map.insert("optional".to_string(), ":optional".to_string());
        map.insert("fullscreen".to_string(), ":fullscreen".to_string());
        map.insert("focusWithin".to_string(), ":focus-within".to_string());
        map.insert("firstLine".to_string(), "::first-line".to_string());
        map.insert("firstLetter".to_string(), "::first-letter".to_string());
        map.insert("before".to_string(), "::before".to_string());
        map.insert("after".to_string(), "::after".to_string());
        map.insert("outOfRange".to_string(), ":out-of-range".to_string());
        map.insert("root".to_string(), ":root".to_string());
        map.insert("firstPage".to_string(), ":first-page".to_string());
        map.insert("leftPage".to_string(), ":left-page".to_string());
        map.insert("rightPage".to_string(), ":right-page".to_string());
        map.insert("empty".to_string(), ":empty".to_string());
        map.insert("minLargeDesktops".to_string(), "#min-width: 1200px".to_string());
        map.insert("minStandardDesktops".to_string(), "#min-width: 992px".to_string());
        map.insert("minPortraitTablets".to_string(), "#min-width: 768px".to_string());
        map.insert("minLargeSmartphones".to_string(), "#min-width: 426px".to_string());
        map.insert("minStandardSmartphones".to_string(), "#min-width: 320px".to_string());
        map.insert("maxLargeDesktops".to_string(), "#max-width: 1199px".to_string());
        map.insert("maxStandardDesktops".to_string(), "#max-width: 991px".to_string());
        map.insert("maxPortraitTablets".to_string(), "#max-width: 767px".to_string());
        map.insert("maxLargeSmartphones".to_string(), "#max-width: 480px".to_string());
        map.insert("maxStandardSmartphones".to_string(), "#max-width: 425px".to_string());

        map
    };
}